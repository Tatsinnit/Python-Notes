Type system of Python:

Python is a dynamically-typed language.

Python is a high level language and its advantage reside in the way this language is restricted with features which allow this language free to use as an awesome glue between intermediate to massive complex system.

The awesomeness of this language is residing in the 5though behind its creation which is simplicity. Even in its famous tutorial by Guido he says that the only way you can learn to dive in, its not massively deep waters.

In a weakly typed language, variables can be implicitly coerced to unrelated types, whereas in a strongly typed language they cannot, and an explicit conversion is required. (Note that I said unrelated types. Most languages will allow implicit coercions between related types — for example, the addition of an integer and a float. By unrelated types I mean things like numbers and strings.) In a typical weakly typed language, the number 9 and the string “9” are interchangeable, and the following sequence of statements is legal. [1]

{code}
a  = 9

b = "9"

c = concatenate(a, b)  // produces "99"

d = add(a, b)          // produces 18
{code}

My next few notes will be mainly around data flow, extensibility and structure available in Python.

I will further update this page with intricacies as to how the language deal with types, but at an implementation level detail that is not necessary for anyone.

[1] https://pythonconquerstheuniverse.wordpress.com/2009/10/03/static-vs-dynamic-typing-of-programming-languages/
